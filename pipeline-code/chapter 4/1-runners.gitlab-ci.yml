image: alpine:3.15.1

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"      
      when: never
    - when: always

stages:
  - test
  - build
  - deploy

variables:
  image_repository: docker.io/my-docker-id/myapp
  image_tag: v1.0

run_unit_tests:
  image: node:17-alpine3.14
  tags:
    - ec2
    - docker
    - remote
  stage: test
  before_script:
    - echo "Preparing test data..."
  script:
    - echo "Running unit tests for micro service $MICRO_SERVICE_NAME ..."
    - npm version
  after_script:
    - echo "Cleaning up temporary files..."

run_lint_tests:
  tags:
    - ec2
    - shell
    - remote
  stage: test
  before_script:
    - echo "Preparing test data..."
  script:
    - echo "Running lint tests..."
  after_script:
    - echo "Cleaning up temporary files..."    

build_image:
  tags:
    - macos
    - local
  only:
    - main
  stage: build
  script: 
    - echo "Building the docker image..."
    - echo "Tagging the docker image $image_repository:$image_tag "
  
push_image:
  tags:
    - macos
    - local
  only:
    - main
  stage: build
  needs: 
    - build_image
  script:
    - echo "Logging into docker registry..."
    - echo "Pushing docker image $image_repository:$image_tag to registry..."

deploy_image:
  tags:
    - macos
    - local
  only:
    - main
  stage: deploy
  script:
    - echo "Deploying new docker image $image_repository:$image_tag to $DEPLOYMENT_ENVIRONMENT using the following configuration file - $PROPERTIES_FILE ..."
    - cat $PROPERTIES_FILE
